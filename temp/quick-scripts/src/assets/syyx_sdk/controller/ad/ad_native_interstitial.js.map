{"version":3,"sources":["assets\\syyx_sdk\\controller\\ad\\ad_native_interstitial.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { native_ad_data, syyx_view } from \"../../model/model\";\r\nimport { e_ad_id, e_ad_native_state, e_ad_native_type } from \"../../configs/syyx_sdk_enum\";\r\nimport { syyx_sdk_utils } from \"../../utils/syyx_sdk_utils\";\r\nimport { syyx_manager } from \"../syyx_manager\";\r\nimport { syyx_const } from \"../../configs/syyx_sdk_config\";\r\nimport { ad_banner } from \"./ad_banner\";\r\nimport { syyx_adv_manager } from \"./syyx_adv_manager\";\r\nimport { syyx_sdk_api } from \"../../syyx_sdk_api\";\r\nexport class ad_native_interstitial {\r\n    /**\r\n    * 上一次显示的id\r\n    */\r\n    static _last_ad_id = undefined\r\n    /**\r\n      * 原生数据\r\n      */\r\n    static _native_data_list = []\r\n\r\n    /**\r\n    * 远端运营配置\r\n    */\r\n    static _business_config_data = {};\r\n\r\n    /**\r\n     * 广告id\r\n     */\r\n    static _ad_pos_id\r\n\r\n    /**\r\n     * 普通插屏配置表id\r\n     */\r\n    static _normal_ad_pos_id\r\n\r\n    /**\r\n    * 创建广告时传入的参数\r\n    */\r\n    static _ad_param\r\n\r\n    static show_count = 0\r\n\r\n    static next_click_wrap_count = -1\r\n\r\n    static check_is_click_wrap() {\r\n        this._business_config_data = syyx_manager.get_business_config()\r\n        if (this._business_config_data && this._business_config_data[\"native_interstitial_click_wrap\"]) {\r\n            let rule = syyx_sdk_api.get_business_data_by_key('native_interstitial_click_wrap')\r\n            if (rule) {\r\n                if (this.next_click_wrap_count == -1) {\r\n                    this.next_click_wrap_count = rule[0]\r\n                }\r\n                if (this.show_count == this.next_click_wrap_count) {\r\n                    console.log(\"igc----- native_interstitial is easy click!\")\r\n                    this.next_click_wrap_count += rule[1] + Math.floor(Math.random() * (rule[2] - rule[1] + 1))\r\n                    console.log(\"igc----- native_interstitial next easy click count：\", this.next_click_wrap_count)\r\n                    return true\r\n                }\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    static report_ad_click(ad_pos_id: string, native_data?) {\r\n\r\n        if (!this._ad_pos_id) {\r\n            console.log(\"igc----- ad_native_interstitial  report_ad_click this.ad_pos_id is null!!\")\r\n            this._ad_pos_id = e_ad_id.native_interstitial_hall\r\n        }\r\n\r\n        if (this._ad_pos_id != ad_pos_id) {\r\n            return\r\n        }\r\n\r\n        //上报的是原生插屏点击  隐藏原生插屏Ui 重新请求新的原生插屏数据\r\n        this.hide_native_interstitial_ui()\r\n\r\n        this._business_config_data = syyx_manager.get_business_config()\r\n        if (this._business_config_data && this._business_config_data[\"native_interstitial_report_click_update_switch\"]) {\r\n            if (this._business_config_data[\"native_interstitial_report_click_update_switch\"].value[0] == 1) {\r\n                this.load_native_interstitial(this._ad_param.ad_type, this._ad_param.ad_pos_id, this._ad_param.onLoad,\r\n                    this._ad_param.onShow, this._ad_param.onClose, this._ad_param.onError)\r\n            }\r\n        }\r\n    }\r\n\r\n    static report_ad_show(ad_pos_id: string, native_data) {\r\n\r\n        if (!this._ad_pos_id) {\r\n            console.log(\"igc----- ad_native_interstitial  report_ad_click this.ad_pos_id is null!!\")\r\n            this._ad_pos_id = e_ad_id.native_interstitial_hall\r\n        }\r\n\r\n        if (this._ad_pos_id == ad_pos_id) {\r\n            this._last_ad_id = native_data.id\r\n            ad_banner.hide_banner()\r\n        }\r\n    }\r\n\r\n    static check_can_load_native_interstitial() {\r\n        this._business_config_data = syyx_manager.get_business_config()\r\n        if (this._business_config_data && this._business_config_data[\"load_native_interstitial_rule\"]) {\r\n            if ((this.show_count + 1) % this._business_config_data[\"load_native_interstitial_rule\"].value[0] == 0) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    /**\r\n    * 加载原生插屏\r\n    */\r\n    static load_native_interstitial(ad_type?: igc.e_ad_type, ad_pos_id?: string, onLoad?: Function, onShow?: Function, onClose?: Function, onError?: Function) {\r\n        let self = this\r\n\r\n        if (!ad_banner.can_show_first) {\r\n            console.log(\"igc----- is in oppo first ad cd\")\r\n            return\r\n        }\r\n\r\n        if (syyx_adv_manager.check_is_click_limit(e_ad_native_type.native_interstitial)) {\r\n            this.hide_native_interstitial_ui()\r\n            return\r\n        }\r\n\r\n        this._ad_pos_id = ad_pos_id\r\n        this._ad_param = {\r\n            ad_type: ad_type,\r\n            ad_pos_id: ad_pos_id,\r\n            onLoad: onLoad,\r\n            onShow: onShow,\r\n            onClose: onClose,\r\n            onError: onError,\r\n        }\r\n\r\n        let ad_id = syyx_adv_manager.get_channel_ad_id(ad_pos_id)\r\n        if (!ad_id) {\r\n            console.log(\"igc----- ad_native_interstitial native_interstitial_id no configure in adv.csv\")\r\n            return\r\n        }\r\n\r\n        if (!this.check_can_load_native_interstitial()) {\r\n            console.log(\"igc-----syyx_adv_manager------ limit load_native_interstitial!!!\")\r\n            console.error(\"igc-----syyx_adv_manager-------load_native_interstitial onError\")\r\n            onError && onError()\r\n            self.load_native_interstitial_error()\r\n            return\r\n        }\r\n\r\n        //上一个加载的原生banner没有展示过\r\n        let latest_data = syyx_adv_manager.get_latest_native_data(this._native_data_list)\r\n        if (latest_data && latest_data.state == e_ad_native_state.need_show) {\r\n            //展示原生插屏\r\n            self.show_native_interstitial_ui(latest_data)\r\n            onLoad && onLoad({}, latest_data)\r\n            onShow && onShow()\r\n            return\r\n        }\r\n\r\n        //web渠道  返回假数据\r\n        if (syyx_const.syyx_sdk_channel === igc.e_channel_type.web) {\r\n            let data = new native_ad_data()\r\n            data.id = igc.utils_manager.get_random_name()\r\n            data.adPosId = ad_pos_id\r\n            data.adId = \"1\"\r\n            data.adUnitId = syyx_sdk_utils.get_random_number([0, 100000])\r\n            data.imgUrlList = \"https://static-cdn.llewan.com/h5/ddsdk/plugin/share_img.jpg\"\r\n            data.title = \"原生插屏标题\" + syyx_sdk_utils.get_random_number([200, 300])\r\n            data.desc = \"原生插屏描述\" + syyx_sdk_utils.get_random_number([200, 300])\r\n            data.state = e_ad_native_state.need_show\r\n            data.native_type = e_ad_native_type.native_interstitial\r\n            this.add_native_data(data)\r\n            //展示原生插屏\r\n            this.show_native_interstitial_ui(data)\r\n            onLoad && onLoad({}, data)\r\n            onShow && onShow()\r\n            return\r\n        }\r\n\r\n        syyx_manager.create_ad(igc.e_ad_type.native, ad_pos_id,\r\n            function on_load(param, ad_data_list) {\r\n                console.log(\"igc-----syyx_adv_manager-------load_native_interstitial on_load\", ad_data_list)\r\n                //返回数据异常\r\n                if (ad_data_list == undefined || !ad_data_list[0]) {\r\n                    onError && onError()\r\n                } else {\r\n                    let length = 0\r\n                    if (syyx_const.syyx_sdk_channel === igc.e_channel_type.vivo_qg) {\r\n                        //vivo渠道只取最后一个位置\r\n                        length = ad_data_list.length - 1\r\n                    }\r\n                    let data = new native_ad_data()\r\n                    data.id = igc.utils_manager.get_random_name()\r\n                    data.adPosId = ad_pos_id\r\n                    data.adId = syyx_adv_manager.get_channel_ad_id(ad_pos_id)\r\n                    data.adUnitId = ad_data_list[length].adUnitId\r\n                    data.imgUrlList = syyx_sdk_utils.format_remote_texture_url(ad_data_list[length].imgUrlList[0])\r\n                    data.title = ad_data_list[length].title\r\n                    data.desc = ad_data_list[length].desc\r\n                    data.state = e_ad_native_state.need_show\r\n                    data.native_type = e_ad_native_type.native_interstitial\r\n                    self.add_native_data(data)\r\n                    //展示原生插屏\r\n                    self.show_native_interstitial_ui(data)\r\n                    onLoad && onLoad({}, data)\r\n                    onShow && onShow()\r\n                    // syyx_adv_manager.add_native_show_count()\r\n                }\r\n            },\r\n            function on_show() {\r\n            },\r\n            function on_close(param, res) {\r\n            },\r\n            function on_error(param, err) {\r\n                onError && onError()\r\n                console.error(\"igc-----syyx_adv_manager-------load_native_interstitial onError\", err)\r\n                self.load_native_interstitial_error()\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 加载原生插屏失败\r\n     */\r\n    static load_native_interstitial_error() {\r\n        let native_data = undefined\r\n        if (this.check_can_load_native_interstitial()) {\r\n            native_data = syyx_adv_manager.get_native_data(this._last_ad_id)\r\n        } else {\r\n            native_data = this.get_native_data(this._last_ad_id, e_ad_native_type.native_interstitial)\r\n        }\r\n\r\n        if (native_data) {\r\n            //自己有数据的话\r\n            this.show_native_interstitial_ui(native_data)\r\n        } else {\r\n            this.show_normal_interstitial()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 普通插屏报错\r\n     */\r\n    static load_normal_interstitial_error() {\r\n        let native_data = undefined\r\n        if (this.check_can_load_native_interstitial()) {\r\n            native_data = syyx_adv_manager.get_native_data()\r\n        } else {\r\n            native_data = this.get_native_data(undefined, e_ad_native_type.native_interstitial)\r\n        }\r\n        if (native_data) {\r\n            //自己有数据的话\r\n            this.show_native_interstitial_ui(native_data)\r\n        }\r\n    }\r\n\r\n    static show_normal_interstitial() {\r\n        let self = this\r\n        this._normal_ad_pos_id = syyx_adv_manager._adv_config_data[e_ad_id.native_interstitial_hall].backup_id || undefined\r\n        if (syyx_const.syyx_sdk_channel == igc.e_channel_type.vivo_qg && this._normal_ad_pos_id) {\r\n            syyx_manager.create_ad(\r\n                igc.e_ad_type.interstitial,\r\n                this._normal_ad_pos_id,\r\n                function () {\r\n                    ad_banner.hide_banner()\r\n                },\r\n                function () { },\r\n                function () {\r\n                },\r\n                function () {\r\n                    //普通插屏加载报错\r\n                    self.load_normal_interstitial_error()\r\n                })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 展示带遮罩的原生插屏\r\n     */\r\n    static show_native_interstitial_ui(native_data) {\r\n        syyx_sdk_api.create_interstitial(function (view) {\r\n            view.show && view.show(native_data);\r\n        });\r\n    }\r\n\r\n    /**\r\n    * 隐藏带遮罩的原生插屏\r\n    */\r\n    static hide_native_interstitial_ui() {\r\n        syyx_sdk_api.load_view(syyx_view.interstitial, function (view) {\r\n            view.hide && view.hide();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 储存原生数据\r\n     * @param native_data 原生数据\r\n     */\r\n    static add_native_data(native_data) {\r\n        if (syyx_adv_manager.check_is_open_oppo_rule()) {\r\n            syyx_adv_manager.add_native_data(native_data)\r\n        } else {\r\n            this._native_data_list[0] = native_data\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  原生插屏只是用原生Banner和结算原生数据\r\n     */\r\n    static get_native_data(ignore_id = undefined, ignore_type = undefined) {\r\n        if (!ad_banner.can_show_first) {\r\n            console.log(\"igc ----- oppo's first native ad is in cd\")\r\n            return undefined\r\n        }\r\n\r\n        //判断各个原生点击率是否超标\r\n        let banner_limit = syyx_adv_manager.check_is_click_limit(e_ad_native_type.native_banner)\r\n        let inner_limit = syyx_adv_manager.check_is_click_limit(e_ad_native_type.native_inner_interstitial)\r\n        let interstitial_limit = syyx_adv_manager.check_is_click_limit(e_ad_native_type.native_interstitial)\r\n\r\n        // console.log(\"原生插屏使用原生池 筛选条件--------->忽略id：\", ignore_id, \"忽略原生类型：\", ignore_type)\r\n\r\n        // console.log(\"原生Banner点击率:\", banner_limit)\r\n        // console.log(\"结算原生点击率:\", inner_limit)\r\n        // console.log(\"原生插屏点击率:\", interstitial_limit)\r\n\r\n        let cur_data_cache = []\r\n        for (let i in syyx_adv_manager._native_data_cache) {\r\n            if (syyx_adv_manager._native_data_cache[i].id != ignore_id && syyx_adv_manager._native_data_cache[i].native_type != ignore_type) {\r\n                if (syyx_adv_manager._native_data_cache[i].native_type == e_ad_native_type.native_banner && !banner_limit) {\r\n                    cur_data_cache.push(syyx_adv_manager._native_data_cache[i])\r\n                } else if (syyx_adv_manager._native_data_cache[i].native_type == e_ad_native_type.native_inner_interstitial && !inner_limit) {\r\n                    cur_data_cache.push(syyx_adv_manager._native_data_cache[i])\r\n                } else if (syyx_adv_manager._native_data_cache[i].native_type == e_ad_native_type.native_interstitial && !interstitial_limit) {\r\n                    cur_data_cache.push(syyx_adv_manager._native_data_cache[i])\r\n                }\r\n            }\r\n        }\r\n\r\n        let banner_list = []\r\n        let inner_list = []\r\n\r\n        for (let i in cur_data_cache) {\r\n            if (cur_data_cache[i].native_type == e_ad_native_type.native_banner) {\r\n                banner_list.push(cur_data_cache[i])\r\n            } else if (cur_data_cache[i].native_type == e_ad_native_type.native_inner_interstitial) {\r\n                inner_list.push(cur_data_cache[i])\r\n            }\r\n        }\r\n\r\n        this._business_config_data = syyx_manager.get_business_config()\r\n        if (this._business_config_data && this._business_config_data[\"first_use_natibe_banner\"]) {\r\n            if (this._business_config_data[\"first_use_natibe_banner\"].value[0] == 1) {\r\n                if (banner_list.length > 0) {\r\n                    // console.log(\"原生插屏使用原生banner数据\")\r\n                    return this.get_cur_data(banner_list)\r\n                } else {\r\n                    if (inner_list.length > 0) {\r\n                        // console.log(\"原生插屏使用结算原生数据\")\r\n                        return this.get_cur_data(inner_list)\r\n                    }\r\n                }\r\n            } else {\r\n                if (inner_list.length > 0) {\r\n                    // console.log(\"原生插屏使用结算原生数据\")\r\n                    return this.get_cur_data(inner_list)\r\n                } else {\r\n                    if (banner_list.length > 0) {\r\n                        // console.log(\"原生插屏使用原生banner数据\")\r\n                        return this.get_cur_data(banner_list)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    static get_cur_data(cur_data_cache) {\r\n        if (syyx_adv_manager.check_native_data_list_is_reprot(cur_data_cache)) {\r\n            //全部数据都上报曝光过了\r\n            console.log(\"igc----- syyx_adv_manager use old load native data\")\r\n            return syyx_adv_manager.get_min_order_native_data(cur_data_cache)\r\n        } else {\r\n            //有数据没有上报过曝光  用最新数据\r\n            console.log(\"igc----- syyx_adv_manager use new load native data\")\r\n            return syyx_adv_manager.get_latest_native_data(cur_data_cache)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}
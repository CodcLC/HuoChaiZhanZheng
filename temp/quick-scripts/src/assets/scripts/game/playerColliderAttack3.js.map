{"version":3,"sources":["assets\\scripts\\game\\playerColliderAttack3.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,gDAA4C;AAE5C,mDAA2D;AAC3D,6CAAwC;AACxC,0CAAqC;AAE/B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAmD,yCAAY;IAA/D;QAAA,qEAyBC;QAvBG,YAAM,GAAmB,EAAE,CAAC;QAC5B,kBAAY,GAAmB,EAAE,CAAC;;IAsBtC,CAAC;IArBG,yCAAS,GAAT;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IACD,mCAAG,GAAH,UAAI,KAAc,EAAE,UAAkB,EAAE,UAAsB;QAC1D,YAAY;QACZ,KAAK,CAAC,YAAY,CAAC,4BAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAC1E,YAAY;QACZ,KAAK,CAAC,YAAY,CAAC,4BAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,wBAAS,CAAC,MAAM,CAAC,CAAC;IACjF,CAAC;IACD,gDAAgB,GAAhB,UAAiB,KAAkB,EAAE,IAAiB;QAClD,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;YAAE,OAAO;QACnD,IAAI,GAAG,GAAW,kBAAQ,CAAC,QAAQ,CAAC,WAAW,GAAG,qBAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,eAAe;YACnG,qBAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;QAC5D,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,2BAAU,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IACD,+CAAe,GAAf,UAAgB,KAAkB,EAAE,IAAiB;QACjD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IAxBgB,qBAAqB;QADzC,OAAO;OACa,qBAAqB,CAyBzC;IAAD,4BAAC;CAzBD,AAyBC,CAzBkD,EAAE,CAAC,SAAS,GAyB9D;kBAzBoB,qBAAqB","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport { audioName } from \"../audioNameMgr\";\nimport audioManager from \"../main/audioManager\";\nimport { attackType, enemyScript } from \"./animationState\";\nimport GameManager from \"./GameManager\";\nimport playerHp from \"./ui/playerHp\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class playerColliderAttack3 extends cc.Component {\n\n    enemys: Array<cc.Node> = [];\n    enemysHadHit: Array<cc.Node> = [];\n    onDisable() {\n        this.enemys = [];\n        this.enemysHadHit = [];\n    }\n    hit(enemy: cc.Node, damgeScale: number, attackType: attackType) {\n        //@ts-ignore\n        enemy.getComponent(enemyScript[enemy.name]).beHit(damgeScale, attackType);\n        //@ts-ignore\n        enemy.getComponent(enemyScript[enemy.name]).playBeHitSound(audioName.slash3);\n    }\n    onCollisionEnter(other: cc.Collider, self: cc.Collider) {\n        if (this.enemysHadHit.includes(other.node)) return;\n        let dmg: number = playerHp.instance.damageScale * GameManager.instance.playerController.damageScaleZoom *\n            GameManager.instance.playerController.damage3ScaleTimes;\n        this.hit(other.node, dmg, attackType.attack3);\n        this.enemysHadHit.push(other.node);\n    }\n    onCollisionExit(other: cc.Collider, self: cc.Collider) {\n        let index = this.enemys.indexOf(other.node);\n        this.enemys.splice(index, 1);\n    }\n}\n"]}
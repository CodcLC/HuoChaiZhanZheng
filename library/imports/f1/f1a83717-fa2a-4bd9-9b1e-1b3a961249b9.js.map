{"version":3,"sources":["assets\\scripts\\game\\coinDrop.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport { caijiTools } from \"../caijiTools\";\nimport { data } from \"../sdk/data\";\nimport GameManager from \"./GameManager\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class coinDrop extends cc.Component {\n\n    coinNumer:number=1;\n    targetPosition:cc.Vec3=null;\n    isPickUpTime:boolean=false;\n    rigibody:cc.RigidBody=null;\n    circleCollider:cc.PhysicsCircleCollider=null;\n    speed:number=1200;\n    isDropFloor:boolean=false;\n\n    onLoad () {\n        this.rigibody=this.node.getComponent(cc.RigidBody);\n        this.circleCollider=this.node.getComponent(cc.PhysicsCircleCollider);\n    }\n    start () {\n        GameManager.instance.dropCoins.push(this.node);\n        this.addForce();\n        this.scheduleOnce(()=>{\n            this.startMoveToPlayer();\n        },1.5);\n    }\n\n    addForce(){\n        let force_x=caijiTools.random_int(-60,60)*150;\n        let force_y=caijiTools.random_int(30,60)*150;\n        this.rigibody.applyForceToCenter(cc.v2(force_x,force_y),true);\n    }\n    startMoveToPlayer(){\n        this.isPickUpTime=true;\n        this.closeDamping();\n    }\n    update (dt) {\n        if(this.isPickUpTime){\n            this.moveToPlayer();\n        }\n    }\n    lateUpdate(){\n        if(this.rigibody.linearVelocity.len()<10){\n            if(this.circleCollider.restitution==0) return;\n            this.rigibody.linearVelocity=cc.v2(0,0);\n            this.circleCollider.restitution=0;\n            this.circleCollider.apply();\n        }\n    }\n    onBeginContact(contact: cc.PhysicsContact, selfCollider: cc.PhysicsCollider, otherCollider: cc.PhysicsCollider) {\n        let other = otherCollider.node;\n        if (other.group == \"ground\") {\n            this.openDamping();\n        }else if(other.group==\"player\"){\n            contact.disabled=true;\n        }\n    }\n    addCoin(){\n        let coin=Number(data.getCache(\"Base\",\"coin\"))+this.coinNumer;\n        data.updateCache(\"Base\",\"coin\",coin);\n    }\n    moveToPlayer(){\n        this.targetPosition=cc.v3(GameManager.instance.player.x,GameManager.instance.player.y+70)\n        let direct=this.targetPosition.sub(this.node.position).normalizeSelf();\n        this.rigibody.linearVelocity=cc.v2(direct.x*this.speed,direct.y*this.speed);\n        let len=this.targetPosition.sub(this.node.position).len();\n        if(len<15){\n            this.addCoin();\n            this.node.active=false;\n            this.node.destroy();\n        }\n    }\n    openDamping(){\n        if(this.isDropFloor) return;\n        this.isDropFloor=true;\n        this.rigibody.linearDamping=2;\n        this.rigibody.angularDamping=2;\n    }\n    closeDamping(){\n        this.rigibody.linearDamping=0;\n    }\n}\n"]}
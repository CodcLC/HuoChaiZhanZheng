{"version":3,"sources":["assets\\syyx_sdk\\utils\\syyx_sdk_utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { e_syyx_sdk_publish_type, init_config, syyx_const } from \"../configs/syyx_sdk_config\";\r\n\r\nexport class syyx_sdk_utils {\r\n\r\n    static log(...data: any[]) {\r\n        console.log(\"syyx_sdk: \", JSON.stringify(data));\r\n    }\r\n    static error(...data: any[]) {\r\n        if (init_config._debug) console.error(\"syyx_sdk: \", JSON.stringify(data));\r\n    }\r\n\r\n    /**\r\n     * 从两个数中随机一个中间值\r\n     */\r\n    static get_random_number(list) {\r\n        return list[0] + Math.floor(Math.random() * (list[1] - list[0]))\r\n    }\r\n\r\n    /**\r\n     * 应用默认的缩放比\r\n     */\r\n    static set_default_scale(view: any) {\r\n        let ratio = this.get_screen_ratio();\r\n        ratio *= view.node.scaleX;\r\n        view.node.setScale(ratio, ratio)\r\n        console.log(\"igc-----screen ratio is \", ratio)\r\n    }\r\n\r\n    /**\r\n    * 获取当前游戏屏幕舞台与基于1920*1080设计舞台的比例\r\n    */\r\n    static get_screen_ratio() {\r\n        if (window[\"cc\"]) {\r\n            if (cc.view.getVisibleSize().width > cc.view.getVisibleSize().height) {\r\n                return cc.view.getVisibleSize().height / 1080\r\n            }\r\n            else if (cc.view.getVisibleSize().width <= cc.view.getVisibleSize().height) {\r\n                return cc.view.getVisibleSize().width / 1080\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    static get_largest_zorder() {\r\n        return 32767;\r\n    }\r\n\r\n    /**\r\n    * 获取视图计算缩放比之后的的实际宽高\r\n    */\r\n    static get_size(view): any {\r\n        if (window[\"Laya\"]) {\r\n            return { width: view.width * view.scaleX, height: view.height * view.scaleY }\r\n        }\r\n        return {}\r\n    }\r\n\r\n    static get_stage() {\r\n        if (window[\"Laya\"]) {\r\n            window[\"Laya\"].stage\r\n        } else {\r\n            return window[\"cc\"].director.getScene()\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 解析配置表csv\r\n    * @param data csv配置表原数据\r\n    */\r\n    static parse_csv(data, key) {\r\n        if (syyx_const.syyx_sdk_publish === e_syyx_sdk_publish_type.in) {\r\n            return data\r\n        } else {\r\n            return igc.igc_resources_utils.parse_csv(data, key);\r\n        }\r\n    }\r\n\r\n    static load_resource(file_path, load_back, self = undefined, error_back?) {\r\n        if (window[\"Laya\"]) {\r\n            window[\"Laya\"].loader.load(file_path, window[\"Laya\"].Handler.create(self, data => {\r\n                if (data) {\r\n                    load_back && load_back(data)\r\n                } else {\r\n                    console.error(\"igc-----load_resource fail\", file_path)\r\n                }\r\n            }))\r\n        } else {\r\n            window[\"cc\"].loader.loadRes(file_path, function (err, data) {\r\n                let cur_data = data\r\n                if (file_path.indexOf(\"json\") != -1) {\r\n                    cur_data = data.json\r\n                }\r\n\r\n                if (err) {\r\n                    error_back && error_back()\r\n                } else {\r\n                    if (data) {\r\n                        load_back && load_back(cur_data)\r\n                    } else {\r\n                        console.error(\"igc-----load_resource fail\", file_path)\r\n                        error_back && error_back()\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static load_resource_texture(path, sprite) {\r\n        if (window[\"cc\"]) {\r\n            cc.loader.loadRes(path, cc.SpriteFrame, function (err, spriteFrame) {\r\n                if (err == null && cc.isValid(sprite) && cc.isValid(sprite.node)) {\r\n                    sprite.spriteFrame = spriteFrame;\r\n                }\r\n                else {\r\n                    console.error(path + \" is not find\", err)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载图片\r\n     * @param icon 图片目标节点\r\n     * @param icon_url 图片地址\r\n     * @param call_back 回调  用于处理图片加载失败 或者  报错等特殊情况\r\n     */\r\n    static set_texture_url(icon, icon_url, call_back?) {\r\n        // if (syyx_const.syyx_sdk_channel === igc.e_channel_type.web) {\r\n        //     return\r\n        // }\r\n        if (window[\"cc\"]) {\r\n            let url = icon_url\r\n            // if (this.is_texture_url(icon_url)) {\r\n            //     url = icon_url\r\n            // } else {\r\n            //     url = icon_url + \".jpg\"\r\n            // }\r\n\r\n            let texture_type = 'jpg'\r\n\r\n            if (icon_url.indexOf(\".png\") != -1) {\r\n                texture_type = 'png'\r\n            }\r\n            try {\r\n                //cocos2.4.0版本\r\n                if (window[\"cc\"][\"assetManager\"] && window[\"cc\"][\"assetManager\"].loadRemote) {\r\n                    window[\"cc\"][\"assetManager\"].loadRemote(url, function (err, data) {\r\n                        if (err) {\r\n                            console.error(\"sdk-----load texture fail1111\", err)\r\n                            // call_back && call_back()\r\n                        } else if (window[\"cc\"].isValid(icon) && data) {\r\n                            let frames = new window[\"cc\"].SpriteFrame(data)\r\n                            icon.spriteFrame = frames\r\n                        }\r\n                    })\r\n                } else {\r\n                    //cocos2.4.0版本以下\r\n                    window[\"cc\"].loader.load({ url: url, type: texture_type }, function (err, data) {\r\n                        if (err) {\r\n                            console.error(\"igc-----load texture fail\", err)\r\n                            call_back && call_back()\r\n                        } else if (window[\"cc\"].isValid(icon) && data) {\r\n                            let frames = new window[\"cc\"].SpriteFrame(data)\r\n                            icon.spriteFrame = frames\r\n                        }\r\n                    });\r\n                }\r\n\r\n            } catch (error) {\r\n                call_back && call_back()\r\n            }\r\n        }\r\n    }\r\n\r\n    static format_remote_texture_url(url) {\r\n        if (url) {\r\n            let jpg_index = url.indexOf(\".jpg\")\r\n            let png_index = url.indexOf(\".png\")\r\n            if (jpg_index != -1) {\r\n                return url.substring(0, jpg_index + 4)\r\n            } else if (png_index != -1) {\r\n                return url.substring(0, png_index + 4)\r\n            } else {\r\n                return url\r\n            }\r\n        }\r\n        return url\r\n    }\r\n\r\n    static is_texture_url(icon_url) {\r\n        if (\r\n            icon_url.indexOf(\".bmp\") != -1 ||\r\n            icon_url.indexOf(\".jpg\") != -1 ||\r\n            icon_url.indexOf(\".jpeg\") != -1 ||\r\n            icon_url.indexOf(\".flic\") != -1 ||\r\n            icon_url.indexOf(\".emf\") != -1 ||\r\n            icon_url.indexOf(\".ico\") != -1 ||\r\n            icon_url.indexOf(\".png\") != -1 ||\r\n            icon_url.indexOf(\".tif\") != -1 ||\r\n            icon_url.indexOf(\".gif\") != -1 ||\r\n            icon_url.indexOf(\".pcx\") != -1 ||\r\n            icon_url.indexOf(\".tga\") != -1 ||\r\n            icon_url.indexOf(\".exif\") != -1 ||\r\n            icon_url.indexOf(\".fpx\") != -1 ||\r\n            icon_url.indexOf(\".svg\") != -1 ||\r\n            icon_url.indexOf(\".psd\") != -1 ||\r\n            icon_url.indexOf(\".cdr\") != -1 ||\r\n            icon_url.indexOf(\".pcd\") != -1 ||\r\n            icon_url.indexOf(\".dxf\") != -1 ||\r\n            icon_url.indexOf(\".ufo\") != -1 ||\r\n            icon_url.indexOf(\".eps\") != -1 ||\r\n            icon_url.indexOf(\".ai\") != -1 ||\r\n            icon_url.indexOf(\".raw\") != -1 ||\r\n            icon_url.indexOf(\".WMF\") != -1 ||\r\n            icon_url.indexOf(\".webp\") != -1 ||\r\n            icon_url.indexOf(\".avif\") != -1\r\n        ) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * 数据对比替换，data2比data1项多\r\n     * @param data1\r\n     * @param data2\r\n     */\r\n    static replace_data(data1: Object, data2: Object) {\r\n        if (!data1 && !data2) {\r\n            console.log(\"the object is wrong\")\r\n            return\r\n        }\r\n\r\n        for (let idx in data2) {\r\n            data2[idx] && (data1[idx] = data2[idx])\r\n        }\r\n        console.log(data2)\r\n    }\r\n\r\n    static set_item(key, value) {\r\n        let str = JSON.stringify(value)\r\n        localStorage.setItem(key, str);\r\n    }\r\n\r\n    static get_item(key) {\r\n        let item = localStorage.getItem(key);\r\n        if (item != \"\") {\r\n            return JSON.parse(item)\r\n        }\r\n        return null\r\n    }\r\n    /**\r\n     * 从数组中随机选择一个元素\r\n     * @param arr \r\n     * @param delete_this \r\n     */\r\n    static random_get(arr: any[], delete_this = false) {\r\n        let len = arr.length;\r\n        if (len == 0) {\r\n            console.error(\"try to get a member from an empty array\");\r\n            throw new Error();\r\n        } else {\r\n            let rand = Math.floor(Math.random() * len);\r\n            let item = arr[rand];\r\n            delete_this && arr.splice(rand, 1);\r\n            return item;\r\n        }\r\n    }\r\n    static check_is_same_day(left_time, right_tiem) {\r\n        let left_date = new Date(left_time)\r\n        let right_date = new Date(right_tiem)\r\n        if (left_date.getDay() != right_date.getDay() || left_date.getMonth() != right_date.getMonth() || left_date.getFullYear() != right_date.getFullYear()) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    static get_date_timestamp() {\r\n        return (new Date()).getTime()\r\n    }\r\n\r\n    /**\r\n    * 获取金币、钻石等显示结果\r\n    * @param num \r\n    */\r\n    static changeToMb(Gold, fix_num = 1) {\r\n        if (Gold < 10000) {\r\n            return Gold + \"\"\r\n        }\r\n        let myGold = parseInt(Gold)\r\n        let goldStr = \"\"\r\n        if (myGold < 1000) {\r\n            goldStr = Math.floor(myGold) + \"\"\r\n        } else if (myGold < 1000000) {\r\n            goldStr = (myGold / 1000).toFixed(fix_num) + \"k\"\r\n        }\r\n        else if (myGold < 1000000000) {\r\n            goldStr = (myGold / 1000000).toFixed(fix_num) + \"m\"\r\n        }\r\n        else if (myGold < 1000000000000) {\r\n            goldStr = (myGold / 1000000000).toFixed(fix_num) + \"b\"\r\n        }\r\n        else {\r\n            goldStr = (myGold / 1000000000000).toFixed(fix_num) + \"t\"\r\n        }\r\n        return goldStr\r\n    }\r\n\r\n    static formatTime(time) {\r\n        if (time <= 0) {\r\n            return \"00:00:00\"\r\n        }\r\n        var h = Math.floor(time / 3600)\r\n        var m = Math.floor(time / 60 % 60)\r\n        var s = Math.floor(time % 60)\r\n        var hStr = h + \"\"\r\n        var mStr = m + \"\"\r\n        var sStr = s + \"\"\r\n        if (h < 10) {\r\n            hStr = \"0\" + h\r\n        }\r\n        if (m < 10) {\r\n            mStr = \"0\" + m\r\n        }\r\n        if (s < 10) {\r\n            sStr = \"0\" + s\r\n        }\r\n        return hStr + \":\" + mStr + \":\" + sStr\r\n    }\r\n\r\n    static formatTime_mmss(time) {\r\n        if (time <= 0) {\r\n            return \"00:00\"\r\n        }\r\n        var m = Math.floor(time / 60 % 60)\r\n        var s = Math.floor(time % 60)\r\n        var mStr = m + \"\"\r\n        var sStr = s + \"\"\r\n\r\n        if (m < 10) {\r\n            mStr = \"0\" + m\r\n        }\r\n        if (s < 10) {\r\n            sStr = \"0\" + s\r\n        }\r\n        return mStr + \":\" + sStr\r\n    }\r\n\r\n    //置灰图片\r\n    static set_grey(node: cc.Node, state) {\r\n        var s = node.getComponentsInChildren(cc.Sprite);\r\n        for (var i = 0; i < s.length; i++) {\r\n            s[i].setState(state);\r\n        }\r\n    }\r\n\r\n    static get_random_int(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min)\r\n    }\r\n\r\n    // 洗牌函数，换位置，随机播放\r\n    static shuffle(arr) {\r\n        let _arr = arr.slice()\r\n        for (let i = 0; i < _arr.length; i++) {\r\n            let j = this.get_random_int(0, i)\r\n            let t = _arr[i]\r\n            _arr[i] = _arr[j]\r\n            _arr[j] = t\r\n        }\r\n        return _arr\r\n    }\r\n\r\n    /**\r\n    *  预加载原生图片\r\n    */\r\n    static preload_native_texture(url) {\r\n        let self = this\r\n        if (window[\"Laya\"]) {\r\n            window[\"Laya\"].loader.load(url, window[\"Laya\"].Handler.create(self, data => {\r\n                if (data) {\r\n                    console.log('igc----- preload native_texture success---->', url)\r\n                }\r\n            }))\r\n        } else {\r\n            let texture_type = 'jpg'\r\n            if (url.indexOf(\".png\") != -1) {\r\n                texture_type = 'png'\r\n            }\r\n            //cocos2.4.0版本\r\n            if (window[\"cc\"][\"assetManager\"] && window[\"cc\"][\"assetManager\"].loadRemote) {\r\n                window[\"cc\"][\"assetManager\"].loadRemote(url, function (err, data) {\r\n                    if (data) {\r\n                        console.log('igc----- preload native_texture success---->', url)\r\n                    }\r\n                })\r\n            } else {\r\n                //cocos2.4.0版本以下\r\n                window[\"cc\"].loader.load({ url: url, type: texture_type }, function (err, data) {\r\n                    if (data) {\r\n                        console.log('igc----- preload native_texture success---->', url)\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}\r\n"]}
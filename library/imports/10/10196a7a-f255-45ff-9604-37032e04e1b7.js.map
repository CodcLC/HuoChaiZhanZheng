{"version":3,"sources":["assets\\syyx_sdk\\controller\\ad\\ad_oppo_banner.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { syyx_const } from \"../../configs/syyx_sdk_config\";\r\nimport { e_ad_native_type, e_ad_native_state, e_ad_id } from \"../../configs/syyx_sdk_enum\";\r\nimport { native_ad_data, syyx_view } from \"../../model/model\";\r\nimport { syyx_sdk_utils } from \"../../utils/syyx_sdk_utils\";\r\nimport { syyx_manager } from \"../syyx_manager\";\r\nimport { ad_banner } from \"./ad_banner\";\r\nimport { syyx_adv_manager } from \"./syyx_adv_manager\";\r\n\r\nexport class ad_oppo_banner {\r\n    /**\r\n     * 上一次显示的id\r\n     */\r\n    static _last_ad_id = undefined\r\n    /**\r\n    * 远端运营配置\r\n    */\r\n    static _business_config_data = {};\r\n\r\n    /**\r\n     * 配置表原生banner广告Id\r\n     */\r\n    static _native_banner_id = undefined\r\n\r\n    /**\r\n     * 配置表普通banner广告Id\r\n     */\r\n    static _normal_banner_id = undefined\r\n\r\n    /**\r\n    * 创建广告时传入的参数\r\n    */\r\n    static _ad_param\r\n\r\n    /**\r\n     * banner累计展示刷新时间\r\n     */\r\n    static update_cd = 5\r\n\r\n    /**\r\n     * 刷新定时器是否开启\r\n     */\r\n    static is_run_timer = false\r\n\r\n    /**\r\n     * 当前是否需要展示banner\r\n     */\r\n    static need_show = true\r\n\r\n    /**\r\n     * banner是否正在显示\r\n     */\r\n    static banner_showing = false\r\n\r\n    /**\r\n     * banner累计展示时间\r\n     */\r\n    static banner_show_time = 0\r\n\r\n    /**\r\n     * 当前正在展示的原生数据\r\n     */\r\n    static _cur_native_data = undefined\r\n\r\n    /**\r\n     * 普通Banner是否在显示\r\n     */\r\n    static normal_banner_showing = false\r\n\r\n    /**\r\n    * 能否显示vivo普通Banner\r\n    */\r\n    static can_show_vivo_banner = true\r\n\r\n    /**\r\n     * 普通banner开关\r\n     */\r\n    static normal_banner_switch = true\r\n\r\n    /**\r\n     * 是否需要加载\r\n     */\r\n    static need_load = false\r\n\r\n    /**\r\n     * 时间段内的banner展示刷新时间刷新时间\r\n     */\r\n    static get_oppo_banner_show_update_time() {\r\n        let play_game_time = syyx_adv_manager.get_play_game_time()\r\n        let update_time_arr = undefined\r\n        this._business_config_data = syyx_manager.get_business_config()\r\n        if (this._business_config_data && this._business_config_data[\"oppo_banner_cool_time\"]) { \r\n            update_time_arr = this._business_config_data[\"oppo_banner_cool_time\"].value   // [[0, 120, 10], [121, 180, 11], [181, 240, 12]]\r\n        }\r\n\r\n        if (!update_time_arr || update_time_arr.length <= 0) {\r\n            //默认值\r\n            return 10\r\n        }\r\n\r\n        let cd = 0\r\n        let last_arr = []\r\n        for (let i in update_time_arr) {\r\n            last_arr = update_time_arr[i]\r\n            if (update_time_arr[i][0] <= play_game_time && update_time_arr[i][1] >= play_game_time) {\r\n                cd = update_time_arr[i][2]\r\n                break\r\n            }\r\n        }\r\n        return cd || last_arr[2]\r\n    }\r\n\r\n    /**\r\n     * 自动刷新定时器\r\n     */\r\n    static run_timer() {\r\n        let self = this\r\n        if (!this.is_run_timer) {\r\n\r\n            this.is_run_timer = true\r\n            this._business_config_data = syyx_manager.get_business_config()\r\n\r\n            self.load_native_banner()\r\n            setInterval(() => {\r\n                if (self.banner_showing) {\r\n                    self.banner_show_time++\r\n                }\r\n                // if (self.banner_show_time > 0 && self.banner_show_time % self.update_cd == 0) { // update_cd 默认为5 // 调用load_native_banner之后，会变10， 11,12\r\n                if (self.banner_show_time > 0 && self.banner_show_time % 30 == 0) { // update_cd 默认为5 // 调用load_native_banner之后，会变10， 11,12\r\n                    console.log(\"igc----- update_native_banner\")\r\n                    self.load_native_banner()\r\n                }\r\n            }, 1000)\r\n        }\r\n        else {\r\n            if (this._cur_native_data && !this.need_load) {\r\n                this.show_native_banner_ui()\r\n            } else {\r\n                this.load_native_banner()\r\n            }\r\n        }\r\n    }\r\n\r\n    static set_banner_height() {\r\n        if (this.is_oppo_vivo()) {\r\n            syyx_manager.load_view(syyx_view.native_banner, function (view) {\r\n                view && view.set_banner_height && view.set_banner_height(false)\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检查是否需要强制加载刷新banner\r\n     */\r\n    static check_need_strong_load_native_banner() {\r\n        let strong_switch = false\r\n        this._business_config_data = syyx_manager.get_business_config()\r\n        if (this._business_config_data && this._business_config_data[\"banner_strong_update_switch\"]) {\r\n            strong_switch = this._business_config_data[\"banner_strong_update_switch\"].value[0] == 1\r\n        }\r\n        // console.log(\"igc----- ad_oppo_banner banner_strong_update_switch->\", strong_switch)\r\n        return strong_switch\r\n    }\r\n\r\n    /**\r\n     * UI层要展示普通banner或者原生banner\r\n     */\r\n    static show_banner(ad_type?: igc.e_ad_type, ad_pos_id?: string, onLoad?: Function, onShow?: Function, onClose?: Function, onError?: Function) {\r\n\r\n        //说明之前有hide banner\r\n        if (!this.need_show) {\r\n            this.check_need_strong_load_native_banner() && (this.need_load = true)\r\n            this.need_show = true\r\n        }\r\n\r\n        this._normal_banner_id = ad_pos_id\r\n        this._native_banner_id = syyx_adv_manager._adv_config_data[ad_pos_id].backup_id\r\n\r\n        this._ad_param = {\r\n            ad_type: ad_type,\r\n            ad_pos_id: ad_pos_id,\r\n            onLoad: onLoad,\r\n            onShow: onShow,\r\n            onClose: onClose,\r\n            onError: onError,\r\n        }\r\n        if (!ad_banner.can_show_first) {\r\n            console.log(\"igc----- banner is in cooling time \")\r\n            return\r\n        }\r\n\r\n        let ad_id = syyx_adv_manager.get_channel_ad_id(ad_pos_id)\r\n\r\n        if (!ad_id) {\r\n            console.log(\"igc----- ad_oppo_banner normal_banner_id no configure in adv.csv\")\r\n            return\r\n        }\r\n\r\n        this.run_timer()\r\n    }\r\n\r\n    /**\r\n    * ui层要隐藏banner或者原生banner\r\n    * 隐藏后销毁定时器  直到下一次show_banner才会重新启动定时器\r\n    */\r\n    static hide_banner() {\r\n        this.need_show = false\r\n        this.banner_showing = false\r\n        if (!ad_banner.can_show_first) {\r\n            console.log(\"igc----- banner is in cooling time \")\r\n            return\r\n        }\r\n        this.hide_native_banner_ui()\r\n        this.hide_normal_banner()\r\n    }\r\n\r\n    /**\r\n     * 加载原生banner数据\r\n     * 会根据不同情况 转去加载普通banner\r\n     */\r\n    static load_native_banner() {\r\n        let self = this\r\n\r\n        this.need_load = false\r\n\r\n        this.banner_timer_id && clearTimeout(this.banner_timer_id)\r\n\r\n        // 刷新当前banner累计展示刷新的时间\r\n        this.update_cd = this.get_oppo_banner_show_update_time() // 跟玩的时间有关，要么10， 11， 12\r\n\r\n        this.hide_native_banner_ui()  // 只是隐藏ui ， 下面的\r\n\r\n        //当前不需要展示任何banner\r\n        if (!this.need_show) {\r\n            self.hide_banner() // need_show也为false\r\n            return\r\n        }\r\n\r\n        this.update_cur_native_data(this._last_ad_id)\r\n\r\n        if (syyx_adv_manager.check_is_click_limit(e_ad_native_type.native_banner)) {\r\n            if (this._cur_native_data) {\r\n                self.show_native_banner_ui()\r\n            } else {\r\n                self.set_show_error_model()\r\n            }\r\n            return\r\n        }\r\n\r\n        if (syyx_adv_manager.check_is_show_count_limit()) {\r\n            console.log(\"igc----- ad_oppo_banner show native is show limit !!!\")\r\n            if (this._cur_native_data) {\r\n                self.show_native_banner_ui()\r\n            } else {\r\n                self.set_show_error_model()\r\n            }\r\n            return\r\n        }\r\n\r\n        if (syyx_const.syyx_sdk_channel === igc.e_channel_type.vivo_qg || syyx_const.syyx_sdk_channel === igc.e_channel_type.oppo_qg) {\r\n            self.show_normal_banner()\r\n            return\r\n        }\r\n\r\n        //判断原生banner开关\r\n        if (this._business_config_data && this._business_config_data[\"native_banner_open_switch\"]) {\r\n            //开关有值  且 值为0 关闭则设置定时器刷新普通banner\r\n            if (this._business_config_data[\"native_banner_open_switch\"].value[0] == 0) {\r\n                self.show_normal_banner()\r\n                return\r\n            }\r\n        }\r\n\r\n        //web渠道  返回假数据\r\n        if (syyx_const.syyx_sdk_channel === igc.e_channel_type.web) {\r\n            let data = new native_ad_data()\r\n            data.id = igc.utils_manager.get_random_name()\r\n            data.adPosId = self._native_banner_id\r\n            data.adId = \"1\"\r\n            data.adUnitId = syyx_sdk_utils.get_random_number([0, 100000])\r\n            data.imgUrlList = \"https://static-cdn.llewan.com/h5/ddsdk/plugin/share_img.jpg\"\r\n            data.title = \"banner测试标题\" + syyx_sdk_utils.get_random_number([0, 100])\r\n            data.desc = \"banner测试描述\" + syyx_sdk_utils.get_random_number([0, 100])\r\n            data.state = e_ad_native_state.need_show\r\n            data.native_type = e_ad_native_type.native_banner\r\n            this.add_native_data(data)\r\n            console.log(\"igc------syyx_adv_manager-------native_banner on_load web\", data)\r\n            //展示原生bannerui\r\n            self.show_native_banner_ui()\r\n            self._ad_param.onLoad && self._ad_param.onLoad()\r\n            syyx_adv_manager.add_native_show_count()\r\n            return\r\n        }\r\n\r\n        //不是oppo vivo 或者 没有设置原生bannerId 则设置定时器刷新普通banner\r\n        if (!self._native_banner_id || !this.is_oppo_vivo()) {\r\n            self.show_normal_banner()\r\n            return\r\n        }\r\n\r\n        // //判断原生banner开关\r\n        // if (this._business_config_data && this._business_config_data[\"native_banner_open_switch\"]) {\r\n        //     //开关有值  且 值为0 关闭则设置定时器刷新普通banner\r\n        //     if (this._business_config_data[\"native_banner_open_switch\"].value[0] == 0) {\r\n        //         self.show_normal_banner()\r\n        //         return\r\n        //     }\r\n        // }\r\n\r\n        //上一个加载的原生banner没有展示过\r\n        if (this._cur_native_data && this._cur_native_data.state == e_ad_native_state.need_show) {\r\n            self.show_native_banner_ui()\r\n            return\r\n        }\r\n\r\n        syyx_manager.create_ad(igc.e_ad_type.native, self._native_banner_id,\r\n            function on_load(param, ad_data_list) {\r\n                console.log(\"igc------syyx_adv_manager-------native_banner on_load\", ad_data_list)\r\n                //返回数据异常\r\n                if (ad_data_list == undefined || !ad_data_list[0]) {\r\n                    self.load_native_banner_error()\r\n                } else {\r\n                    let length = 0\r\n                    if (syyx_const.syyx_sdk_channel === igc.e_channel_type.vivo_qg) {\r\n                        //vivo渠道只取最后一个位置\r\n                        length = ad_data_list.length - 1\r\n                    }\r\n                    let data = new native_ad_data()\r\n                    data.id = igc.utils_manager.get_random_name()\r\n                    data.adPosId = self._native_banner_id\r\n                    data.adId = syyx_adv_manager.get_channel_ad_id(self._native_banner_id)\r\n                    data.adUnitId = ad_data_list[length].adUnitId\r\n                    data.imgUrlList = syyx_sdk_utils.format_remote_texture_url(ad_data_list[length].imgUrlList[0])\r\n                    data.title = ad_data_list[length].title\r\n                    data.desc = ad_data_list[length].desc\r\n                    data.state = e_ad_native_state.need_show\r\n                    data.native_type = e_ad_native_type.native_banner\r\n                    self.add_native_data(data) // 保存缓存\r\n                    //展示原生bannerui\r\n                    self.show_native_banner_ui()\r\n                    self._ad_param.onLoad && self._ad_param.onLoad()\r\n                    syyx_adv_manager.add_native_show_count()\r\n                }\r\n            },\r\n            function on_show() {\r\n            },\r\n            function on_close(param, res) {\r\n            },\r\n            function on_error(param, err) {\r\n                console.error(\"igc-----syyx_adv_manager-------native_banner onError\", err) // 第一次没走这里\r\n                self.load_native_banner_error()\r\n            }\r\n        )\r\n    }\r\n\r\n    static report_ad_click(ad_pos_id: string, native_data?) {\r\n        if (this._native_banner_id != ad_pos_id) {\r\n            return\r\n        }\r\n\r\n        if (this._business_config_data && this._business_config_data[\"native_banner_report_click_update_switch\"]) {\r\n            if (this._business_config_data[\"native_banner_report_click_update_switch\"].value[0] == 1) {\r\n                this.need_show = true\r\n                this.load_native_banner()\r\n            }\r\n        }\r\n    }\r\n\r\n    static report_ad_show(ad_pos_id: string, native_data) {\r\n        if (!this._native_banner_id) {\r\n            // console.log(\"igc----- ad_native_interstitial  report_ad_click this.ad_pos_id is null!!\")\r\n            this._native_banner_id = e_ad_id.native_banner\r\n        }\r\n\r\n        if (this._native_banner_id == ad_pos_id) {\r\n            this._last_ad_id = native_data.id\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 展示原生bannerUi\r\n     */\r\n    static show_native_banner_ui() {\r\n        let self = this\r\n        this.hide_normal_banner()\r\n        if (this.need_show) {\r\n            syyx_manager.create_native_banner(function (view) {\r\n                if (self._cur_native_data) {\r\n                    self.banner_showing = true\r\n                    self._ad_param.onShow && self._ad_param.onShow()\r\n                    view.show && view.show(self._cur_native_data)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 隐藏原生bannerUi\r\n     */\r\n    static hide_native_banner_ui() {\r\n        if (this.is_oppo_vivo()) {\r\n            syyx_manager.load_view(syyx_view.native_banner, function (view) {\r\n                view && view.hide && view.hide()\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载原生失败\r\n     */\r\n    static load_native_banner_error() {\r\n        this.update_cur_native_data(this._last_ad_id)\r\n        //原生加载失败 从池子取一个和上次展示不同的数据\r\n        if (this._cur_native_data) {\r\n            //有不同的数据\r\n            this.show_native_banner_ui()\r\n        } else {\r\n            this.show_normal_banner()\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n    * 加载原普通Banner失败\r\n    */\r\n    static load_normal_banner_error() {\r\n        this.banner_showing = false\r\n        //普通banner报错  把之前累积展示的banner时间重置\r\n        if (this.need_show) {\r\n            this.update_cur_native_data()\r\n            if (this._cur_native_data) {\r\n                this.show_native_banner_ui()\r\n            } else {\r\n                this.set_show_error_model()\r\n            }\r\n        }\r\n    }\r\n\r\n    static set_normal_banner_switch(value) {\r\n        this.normal_banner_switch = value\r\n        if (!value) {\r\n            this.hide_normal_banner()\r\n        }\r\n    }\r\n    /**\r\n    * 显示普通banner\r\n    */\r\n    static show_normal_banner() {\r\n        if (this._business_config_data && this._business_config_data[\"show_normal_banner_switch\"]) {\r\n            if (this._business_config_data[\"show_normal_banner_switch\"].value[0] == 0) {\r\n                return\r\n            }\r\n        }\r\n\r\n        if (!this.normal_banner_switch) {\r\n            console.log(\"igc----- vivo ad_banner show_normal_banner normal_banner_switch is close!!!\")\r\n            this.load_normal_banner_error()\r\n            return\r\n        }\r\n\r\n        let self = this;\r\n        //vivo渠道限制一下  销毁banner10s后才能展示普通banner\r\n        if (!this.can_show_vivo_banner && syyx_const.syyx_sdk_channel === igc.e_channel_type.vivo_qg) {\r\n            // console.error(\"igc------syyx_adv_manager show_normal_banner onError can_show_vivo_banner is false!!\")\r\n            console.log(\"igc----- vivo ad_banner show_normal_banner create too often!!!\")\r\n            console.log(\"igc----- vivo ad_banner show_normal_banner so that use old native banner data!!!\")\r\n            this.load_normal_banner_error()\r\n            return\r\n        }\r\n\r\n        syyx_manager.create_ad(igc.e_ad_type.banner, self._normal_banner_id,\r\n            function onLoad(param, res) {\r\n                self._ad_param.onLoad && self._ad_param.onLoad()\r\n            },\r\n            function onShow() {\r\n                self.normal_banner_showing = true\r\n                console.log(\"igc----- show_normal_banner success\")\r\n                self.hide_native_banner_ui()\r\n                //banner展示成功后判断当前能否展示banner\r\n                self.banner_showing = self.need_show\r\n                if (self.need_show) {\r\n                    self._ad_param.onShow && self._ad_param.onShow()\r\n                    syyx_adv_manager.add_native_show_count()\r\n                } else {\r\n                    self.hide_normal_banner()\r\n                }\r\n            },\r\n            function onClose(param, res) {\r\n                self._ad_param.onClose && self._ad_param.onClose()\r\n            },\r\n            function onError(param, err) {\r\n                console.error(\"igc------syyx_adv_manager show_normal_banner onError\", err)\r\n                self._ad_param.onError && self._ad_param.onError(param, err);\r\n                // console.log(\"igc----- fail to show normal banner so that use native banner's data\")\r\n                self.load_normal_banner_error()\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 当进入到banner展示报错时，此时没有任何原生banner数据\r\n     * 间隔一段时间去判断当前是否需要展示并且当前没有原生banner的数据可以展示，就去加载展示\r\n     */\r\n    static banner_timer_id\r\n    static set_show_error_model() {\r\n        let self = this\r\n        if (syyx_adv_manager.check_is_open_oppo_rule()) {\r\n            this.banner_timer_id && clearTimeout(this.banner_timer_id)\r\n            this.banner_timer_id = setTimeout(function () {\r\n                self.update_cur_native_data()\r\n                if (self.need_show && !self._cur_native_data) {\r\n                    // console.log(\"igc----- ad_oppo_banner set_show_error_model auto load_native_banner\")\r\n                    self.load_native_banner()\r\n                }\r\n            }, this.update_cd * 1000)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 隐藏普通banner\r\n     */\r\n    static normal_banner_timer_id\r\n    static hide_normal_banner() {\r\n        let self = this;\r\n        if (self._normal_banner_id) {\r\n\r\n            //vivo渠道下  普通banner已经在显示  销毁的话记录10s内不能再次创建\r\n            if (self.normal_banner_showing && syyx_const.syyx_sdk_channel === igc.e_channel_type.vivo_qg) {\r\n                self.can_show_vivo_banner = false\r\n                this.normal_banner_timer_id && clearTimeout(this.normal_banner_timer_id)\r\n                this.normal_banner_timer_id = setTimeout(() => {\r\n                    self.can_show_vivo_banner = true\r\n                }, 11000)\r\n            }\r\n            self.normal_banner_showing = false\r\n            syyx_manager.destroy_ad(igc.e_ad_type.banner, self._normal_banner_id)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 玩家手动点击了关闭banner\r\n     */\r\n    static finger_close_banner() {\r\n        if (this.is_oppo_vivo() && this._business_config_data && this._business_config_data[\"finger_close_banner_switch\"]) {\r\n            if (this._business_config_data[\"finger_close_banner_switch\"].value[0] == 1) {\r\n                let cd = this._business_config_data[\"finger_close_banner_switch\"].value[1] || 60\r\n                this.hide_banner()\r\n                ad_banner.can_show_first = false\r\n                setTimeout(function () {\r\n                    ad_banner.can_show_first = true\r\n                }, cd * 1000)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 更新当前正在显示原生Banner的数据\r\n     */\r\n    static update_cur_native_data(ignore_id = undefined) {\r\n        this.banner_show_time = 0\r\n        this._cur_native_data = syyx_adv_manager.get_native_data(ignore_id)\r\n    }\r\n\r\n    /**\r\n     * 储存原生数据\r\n     * @param native_data 原生数据\r\n     */\r\n    static add_native_data(native_data) {\r\n        syyx_adv_manager.add_native_data(native_data)\r\n        this.update_cur_native_data(this._last_ad_id)\r\n    }\r\n\r\n    static is_oppo_vivo() {\r\n        return syyx_const.syyx_sdk_channel === igc.e_channel_type.oppo_qg || syyx_const.syyx_sdk_channel === igc.e_channel_type.vivo_qg || syyx_const.syyx_sdk_channel === igc.e_channel_type.web\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}